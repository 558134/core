{"version":3,"sources":["../src/logTypes/EthSignLog.ts"],"names":["SigningMethod","SigningStage"],"mappings":";AAKO,IAAK,gBAAL,kBAAKA,mBAAL;AACL,EAAAA,eAAA,kBAAe;AACf,EAAAA,eAAA,sBAAmB;AACnB,EAAAA,eAAA,wBAAqB;AACrB,EAAAA,eAAA,wBAAqB;AAJX,SAAAA;AAAA,GAAA;AAUL,IAAK,eAAL,kBAAKC,kBAAL;AACL,EAAAA,cAAA,cAAW;AACX,EAAAA,cAAA,cAAW;AACX,EAAAA,cAAA,YAAS;AAHC,SAAAA;AAAA,GAAA","sourcesContent":["import type { LogType } from './LogType';\n\n/**\n * An enum of the signing method types that we are interested in logging.\n */\nexport enum SigningMethod {\n  PersonalSign = 'personal_sign',\n  EthSignTypedData = 'eth_signTypedData',\n  EthSignTypedDataV3 = 'eth_signTypedData_v3',\n  EthSignTypedDataV4 = 'eth_signTypedData_v4',\n}\n\n/**\n * An enum of the various stages of the signing request\n */\nexport enum SigningStage {\n  Proposed = 'proposed',\n  Rejected = 'rejected',\n  Signed = 'signed',\n}\n\n/**\n * First special case of logging scenarios involves signing requests. In this\n * case the data provided must include the method for the signature request as\n * well as the signingData. This is intended to be used to troubleshoot and\n * investigate FLI at the user's request.\n */\nexport type EthSignLog = {\n  type: LogType.EthSignLog;\n  data: {\n    signingMethod: SigningMethod;\n    stage: SigningStage;\n    // TODO: Replace `any` with type\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    signingData?: any;\n  };\n};\n"]}