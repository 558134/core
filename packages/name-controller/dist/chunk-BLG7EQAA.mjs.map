{"version":3,"sources":["../src/providers/ens.ts"],"sourcesContent":["import { projectLogger, createModuleLogger } from '../logger';\nimport type {\n  NameProvider,\n  NameProviderMetadata,\n  NameProviderRequest,\n  NameProviderResult,\n} from '../types';\nimport { NameType } from '../types';\n\nexport type ReverseLookupCallback = (\n  address: string,\n  chainId: string,\n) => Promise<string>;\n\nconst ID = 'ens';\nconst LABEL = 'Ethereum Name Service (ENS)';\n\nconst log = createModuleLogger(projectLogger, 'ens');\n\nexport class ENSNameProvider implements NameProvider {\n  #isEnabled: () => boolean;\n\n  #reverseLookup: ReverseLookupCallback;\n\n  constructor({\n    isEnabled,\n    reverseLookup,\n  }: {\n    isEnabled?: () => boolean;\n    reverseLookup: ReverseLookupCallback;\n  }) {\n    this.#isEnabled = isEnabled || (() => true);\n    this.#reverseLookup = reverseLookup;\n  }\n\n  getMetadata(): NameProviderMetadata {\n    return {\n      sourceIds: { [NameType.ETHEREUM_ADDRESS]: [ID] },\n      sourceLabels: { [ID]: LABEL },\n    };\n  }\n\n  async getProposedNames(\n    request: NameProviderRequest,\n  ): Promise<NameProviderResult> {\n    if (!this.#isEnabled()) {\n      log('Skipping request as disabled');\n\n      return {\n        results: {\n          [ID]: {\n            proposedNames: [],\n          },\n        },\n      };\n    }\n\n    const { value, variation: chainId } = request;\n\n    log('Invoking callback', { value, chainId });\n\n    try {\n      const proposedName = await this.#reverseLookup(value, chainId);\n      const proposedNames = proposedName ? [proposedName] : [];\n\n      log('New proposed names', proposedNames);\n\n      return {\n        results: {\n          [ID]: { proposedNames },\n        },\n      };\n    } catch (error) {\n      log('Request failed', error);\n      throw error;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;AAcA,IAAM,KAAK;AACX,IAAM,QAAQ;AAEd,IAAM,MAAM,mBAAmB,eAAe,KAAK;AAjBnD;AAmBO,IAAM,kBAAN,MAA8C;AAAA,EAKnD,YAAY;AAAA,IACV;AAAA,IACA;AAAA,EACF,GAGG;AAVH;AAEA;AASE,uBAAK,YAAa,cAAc,MAAM;AACtC,uBAAK,gBAAiB;AAAA,EACxB;AAAA,EAEA,cAAoC;AAClC,WAAO;AAAA,MACL,WAAW,EAAE,yCAA0B,GAAG,CAAC,EAAE,EAAE;AAAA,MAC/C,cAAc,EAAE,CAAC,EAAE,GAAG,MAAM;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,MAAM,iBACJ,SAC6B;AAC7B,QAAI,CAAC,mBAAK,YAAL,YAAmB;AACtB,UAAI,8BAA8B;AAElC,aAAO;AAAA,QACL,SAAS;AAAA,UACP,CAAC,EAAE,GAAG;AAAA,YACJ,eAAe,CAAC;AAAA,UAClB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,EAAE,OAAO,WAAW,QAAQ,IAAI;AAEtC,QAAI,qBAAqB,EAAE,OAAO,QAAQ,CAAC;AAE3C,QAAI;AACF,YAAM,eAAe,MAAM,mBAAK,gBAAL,WAAoB,OAAO;AACtD,YAAM,gBAAgB,eAAe,CAAC,YAAY,IAAI,CAAC;AAEvD,UAAI,sBAAsB,aAAa;AAEvC,aAAO;AAAA,QACL,SAAS;AAAA,UACP,CAAC,EAAE,GAAG,EAAE,cAAc;AAAA,QACxB;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,UAAI,kBAAkB,KAAK;AAC3B,YAAM;AAAA,IACR;AAAA,EACF;AACF;AAzDE;AAEA;","names":[]}