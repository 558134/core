export type {
  FeeMarketEIP1559Values,
  GasPriceValue,
  MethodData,
  Result,
  TransactionControllerActions,
  TransactionControllerEvents,
  TransactionControllerGetStateAction,
  TransactionControllerIncomingTransactionBlockReceivedEvent,
  TransactionControllerPostTransactionBalanceUpdatedEvent,
  TransactionControllerSpeedupTransactionAddedEvent,
  TransactionControllerState,
  TransactionControllerStateChangeEvent,
  TransactionControllerTransactionApprovedEvent,
  TransactionControllerTransactionConfirmedEvent,
  TransactionControllerTransactionDroppedEvent,
  TransactionControllerTransactionFailedEvent,
  TransactionControllerTransactionFinishedEvent,
  TransactionControllerTransactionNewSwapApprovalEvent,
  TransactionControllerTransactionNewSwapEvent,
  TransactionControllerTransactionPublishingSkipped,
  TransactionControllerTransactionRejectedEvent,
  TransactionControllerTransactionStatusUpdatedEvent,
  TransactionControllerTransactionSubmittedEvent,
  TransactionControllerUnapprovedTransactionAddedEvent,
  TransactionControllerMessenger,
} from './TransactionController';
export {
  HARDFORK,
  CANCEL_RATE,
  TransactionController,
} from './TransactionController';
export type {
  DappSuggestedGasFees,
  DefaultGasEstimates,
  FeeMarketGasFeeEstimateForLevel,
  FeeMarketGasFeeEstimates,
  GasFeeEstimates,
  GasPriceGasFeeEstimates,
  InferTransactionTypeResult,
  LegacyGasFeeEstimates,
  Log,
  RemoteTransactionSource,
  RemoteTransactionSourceRequest,
  SavedGasFees,
  SecurityAlertResponse,
  SecurityProviderRequest,
  SendFlowHistoryEntry,
  SimulationBalanceChange,
  SimulationData,
  SimulationError,
  SimulationToken,
  SimulationTokenBalanceChange,
  TransactionError,
  TransactionHistory,
  TransactionHistoryEntry,
  TransactionMeta,
  TransactionParams,
  TransactionReceipt,
} from './types';
export {
  GasFeeEstimateLevel,
  GasFeeEstimateType,
  SimulationErrorCode,
  SimulationTokenStandard,
  TransactionEnvelopeType,
  TransactionStatus,
  TransactionType,
  UserFeeLevel,
  WalletDevice,
} from './types';
export type { EtherscanTransactionMeta } from './utils/etherscan';
export { determineTransactionType } from './utils/transaction-type';
export { mergeGasFeeEstimates } from './utils/gas-flow';
export {
  isEIP1559Transaction,
  normalizeTransactionParams,
} from './utils/utils';

import * as allExports from '.';

describe('@metamask/transaction-controller', () => {
  it('has expected JavaScript exports', () => {
    expect(Object.keys(allExports)).toMatchInlineSnapshot(`
      Array [
        "FeeMarketEIP1559Values",
        "GasPriceValue",
        "MethodData",
        "Result",
        "TransactionControllerActions",
        "TransactionControllerEvents",
        "TransactionControllerGetStateAction",
        "TransactionControllerIncomingTransactionBlockReceivedEvent",
        "TransactionControllerPostTransactionBalanceUpdatedEvent",
        "TransactionControllerSpeedupTransactionAddedEvent",
        "TransactionControllerState",
        "TransactionControllerStateChangeEvent",
        "TransactionControllerTransactionApprovedEvent",
        "TransactionControllerTransactionConfirmedEvent",
        "TransactionControllerTransactionDroppedEvent",
        "TransactionControllerTransactionFailedEvent",
        "TransactionControllerTransactionFinishedEvent",
        "TransactionControllerTransactionNewSwapApprovalEvent",
        "TransactionControllerTransactionNewSwapEvent",
        "TransactionControllerTransactionPublishingSkipped",
        "TransactionControllerTransactionRejectedEvent",
        "TransactionControllerTransactionStatusUpdatedEvent",
        "TransactionControllerTransactionSubmittedEvent",
        "TransactionControllerUnapprovedTransactionAddedEvent",
        "TransactionControllerMessenger",
        "HARDFORK",
        "CANCEL_RATE",
        "TransactionController",
        "DappSuggestedGasFees",
        "DefaultGasEstimates",
        "FeeMarketGasFeeEstimateForLevel",
        "FeeMarketGasFeeEstimates",
        "GasFeeEstimates",
        "GasPriceGasFeeEstimates",
        "InferTransactionTypeResult",
        "LegacyGasFeeEstimates",
        "Log",
        "RemoteTransactionSource",
        "RemoteTransactionSourceRequest",
        "SavedGasFees",
        "SecurityAlertResponse",
        "SecurityProviderRequest",
        "SendFlowHistoryEntry",
        "SimulationBalanceChange",
        "SimulationData",
        "SimulationError",
        "SimulationToken",
        "SimulationTokenBalanceChange",
        "TransactionError",
        "TransactionHistory",
        "TransactionHistoryEntry",
        "TransactionMeta",
        "TransactionParams",
        "TransactionReceipt",
        "GasFeeEstimateLevel",
        "GasFeeEstimateType",
        "SimulationErrorCode",
        "SimulationTokenStandard",
        "TransactionEnvelopeType",
        "TransactionStatus",
        "TransactionType",
        "UserFeeLevel",
        "WalletDevice",
        "EtherscanTransactionMeta",
        "determineTransactionType",
        "mergeGasFeeEstimates",
        "isEIP1559Transaction",
        "normalizeTransactionParams",
      ]
    `);
  });
});
