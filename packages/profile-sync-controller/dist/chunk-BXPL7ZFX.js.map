{"version":3,"sources":["../src/controllers/authentication/index.ts","../src/controllers/authentication/__fixtures__/index.ts","../src/controllers/authentication/__fixtures__/mockResponses.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACiBO,IAAM,aAAa;AACnB,IAAM,sBAAqC;AAAA,EAChD,OAAO;AACT;AAEO,IAAM,2BAA2B,MAAM;AAC5C,SAAO;AAAA,IACL,KAAK;AAAA,IACL,eAAe;AAAA,IACf,UAAU;AAAA,EACZ;AACF;AAEO,IAAM,WACX;AACK,IAAM,sBAAqC;AAAA,EAChD,OAAO;AAAA;AAAA,EAEP,aAAY,oBAAI,KAAK,GAAE,SAAS;AAAA,EAChC,SAAS;AAAA;AAAA,IAEP,eAAe;AAAA;AAAA,IAEf,YAAY;AAAA,EACd;AACF;AAEO,IAAM,2BAA2B,MAAM;AAC5C,SAAO;AAAA,IACL,KAAK;AAAA,IACL,eAAe;AAAA,IACf,UAAU;AAAA,EACZ;AACF;AAEO,IAAM,oBAAoB,qBAAqB,QAAQ;AACvD,IAAM,2BAA+C;AAAA;AAAA,EAE1D,cAAc;AAAA;AAAA,EAEd,aAAY,oBAAI,KAAK,GAAE,QAAQ;AACjC;AAEO,IAAM,iCAAiC,MAAM;AAClD,SAAO;AAAA,IACL,KAAK;AAAA,IACL,eAAe;AAAA,IACf,UAAU;AAAA,EACZ;AACF","sourcesContent":["import Controller from './AuthenticationController';\n\nexport { Controller };\nexport * from './AuthenticationController';\nexport * as Mocks from './__fixtures__';\n","export * from './mockResponses';\n","import type {\n  LoginResponse,\n  NonceResponse,\n  OAuthTokenResponse,\n} from '../services';\nimport {\n  AUTH_LOGIN_ENDPOINT,\n  AUTH_NONCE_ENDPOINT,\n  OIDC_TOKENS_ENDPOINT,\n} from '../services';\n\ntype MockResponse = {\n  url: string;\n  requestMethod: 'GET' | 'POST' | 'PUT';\n  response: unknown;\n};\n\nexport const MOCK_NONCE = '4cbfqzoQpcNxVImGv';\nexport const MOCK_NONCE_RESPONSE: NonceResponse = {\n  nonce: MOCK_NONCE,\n};\n\nexport const getMockAuthNonceResponse = () => {\n  return {\n    url: AUTH_NONCE_ENDPOINT,\n    requestMethod: 'GET',\n    response: MOCK_NONCE_RESPONSE,\n  } satisfies MockResponse;\n};\n\nexport const MOCK_JWT =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\nexport const MOCK_LOGIN_RESPONSE: LoginResponse = {\n  token: MOCK_JWT,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  expires_in: new Date().toString(),\n  profile: {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    identifier_id: 'MOCK_IDENTIFIER',\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    profile_id: 'MOCK_PROFILE_ID',\n  },\n};\n\nexport const getMockAuthLoginResponse = () => {\n  return {\n    url: AUTH_LOGIN_ENDPOINT,\n    requestMethod: 'POST',\n    response: MOCK_LOGIN_RESPONSE,\n  } satisfies MockResponse;\n};\n\nexport const MOCK_ACCESS_TOKEN = `MOCK_ACCESS_TOKEN-${MOCK_JWT}`;\nexport const MOCK_OATH_TOKEN_RESPONSE: OAuthTokenResponse = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  access_token: MOCK_ACCESS_TOKEN,\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  expires_in: new Date().getTime(),\n};\n\nexport const getMockAuthAccessTokenResponse = () => {\n  return {\n    url: OIDC_TOKENS_ENDPOINT,\n    requestMethod: 'POST',\n    response: MOCK_OATH_TOKEN_RESPONSE,\n  } satisfies MockResponse;\n};\n"]}