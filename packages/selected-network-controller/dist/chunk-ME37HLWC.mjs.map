{"version":3,"sources":["../src/SelectedNetworkMiddleware.ts"],"sourcesContent":["import type { JsonRpcMiddleware } from '@metamask/json-rpc-engine';\nimport type { NetworkClientId } from '@metamask/network-controller';\nimport type { Json, JsonRpcParams, JsonRpcRequest } from '@metamask/utils';\n\nimport type { SelectedNetworkControllerMessenger } from './SelectedNetworkController';\nimport { SelectedNetworkControllerActionTypes } from './SelectedNetworkController';\n\nexport type SelectedNetworkMiddlewareJsonRpcRequest = JsonRpcRequest & {\n  networkClientId?: NetworkClientId;\n  origin?: string;\n};\n\nexport const createSelectedNetworkMiddleware = (\n  messenger: SelectedNetworkControllerMessenger,\n): JsonRpcMiddleware<JsonRpcParams, Json> => {\n  const getNetworkClientIdForDomain = (origin: string) =>\n    messenger.call(\n      SelectedNetworkControllerActionTypes.getNetworkClientIdForDomain,\n      origin,\n    );\n\n  return (req: SelectedNetworkMiddlewareJsonRpcRequest, _, next) => {\n    if (!req.origin) {\n      throw new Error(\"Request object is lacking an 'origin'\");\n    }\n\n    req.networkClientId = getNetworkClientIdForDomain(req.origin);\n    return next();\n  };\n};\n"],"mappings":";;;;;AAYO,IAAM,kCAAkC,CAC7C,cAC2C;AAC3C,QAAM,8BAA8B,CAAC,WACnC,UAAU;AAAA,IACR,qCAAqC;AAAA,IACrC;AAAA,EACF;AAEF,SAAO,CAAC,KAA8C,GAAG,SAAS;AAChE,QAAI,CAAC,IAAI,QAAQ;AACf,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AAEA,QAAI,kBAAkB,4BAA4B,IAAI,MAAM;AAC5D,WAAO,KAAK;AAAA,EACd;AACF;","names":[]}