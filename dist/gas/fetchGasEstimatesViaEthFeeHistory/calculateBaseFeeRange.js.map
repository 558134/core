{"version":3,"file":"calculateBaseFeeRange.js","sourceRoot":"","sources":["../../../src/gas/fetchGasEstimatesViaEthFeeHistory/calculateBaseFeeRange.ts"],"names":[],"mappings":";;AAAA,2CAAqC;AAIrC;;;;;GAKG;AACH,SAAwB,qBAAqB,CAC3C,MAAqC;IAErC,MAAM,oBAAoB,GAAG,MAAM;SAChC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC;SACnC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE5B,OAAO;QACL,oBAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;QACxC,oBAAO,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;KACvE,CAAC;AACJ,CAAC;AAXD,wCAWC","sourcesContent":["import { fromWei } from 'ethjs-unit';\nimport { FeeHistoryBlock } from '../fetchBlockFeeHistory';\nimport { FeeRange } from './types';\n\n/**\n * Calculates reasonable minimum and maximum values for base fees over the last 200 blocks.\n *\n * @param blocks - A set of blocks obtained via {@link BlockFeeHistoryDatasetFetcher}.\n * @returns The ranges.\n */\nexport default function calculateBaseFeeRange<Percentile extends number>(\n  blocks: FeeHistoryBlock<Percentile>[],\n): FeeRange {\n  const sortedBaseFeesPerGas = blocks\n    .map((block) => block.baseFeePerGas)\n    .sort((a, b) => a.cmp(b));\n\n  return [\n    fromWei(sortedBaseFeesPerGas[0], 'gwei'),\n    fromWei(sortedBaseFeesPerGas[sortedBaseFeesPerGas.length - 1], 'gwei'),\n  ];\n}\n"]}